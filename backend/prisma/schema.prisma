// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  phone     String?
  password  String
  role      Role     @default(USER)
  bookings  Booking[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Class {
  id          String   @id @default(uuid())
  title       String
  description String
  duration    Int      // นาที
  price       Float
  maxStudents Int
  image       String?
  active      Boolean  @default(true)
  schedules   Schedule[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Schedule {
  id          String   @id @default(uuid())
  classId     String
  class       Class    @relation(fields: [classId], references: [id])
  startTime   DateTime
  endTime     DateTime
  availableSlots Int
  bookings    Booking[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Booking {
  id         String   @id @default(uuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  scheduleId String
  schedule   Schedule @relation(fields: [scheduleId], references: [id])
  status     BookingStatus @default(PENDING)
  paymentId  String?
  totalPrice Float
  notes      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}