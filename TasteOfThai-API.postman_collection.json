{
  "info": {
    "name": "Taste of Thai API",
    "description": "API collection for Thai Cooking Class booking system",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "userToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "staffToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "adminToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "staffId",
      "value": "",
      "type": "string"
    },
    {
      "key": "classId",
      "value": "",
      "type": "string"
    },
    {
      "key": "scheduleId",
      "value": "",
      "type": "string"
    },
    {
      "key": "bookingId",
      "value": "",
      "type": "string"
    },
    {
      "key": "applicationId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "User Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\",\n  \"phone\": \"+1234567890\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('userToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "User Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('userToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Staff Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"staff@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/staff/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "staff", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('staffToken', response.token);",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Classes",
      "item": [
        {
          "name": "Get All Classes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/classes",
              "host": ["{{baseUrl}}"],
              "path": ["classes"]
            }
          }
        },
        {
          "name": "Get Class by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/classes/{{classId}}",
              "host": ["{{baseUrl}}"],
              "path": ["classes", "{{classId}}"]
            }
          }
        },
        {
          "name": "Create Class (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Pad Thai Masterclass\",\n  \"description\": \"Learn to make authentic Pad Thai\",\n  \"duration\": 120,\n  \"price\": 75,\n  \"maxStudents\": 8,\n  \"difficulty\": \"INTERMEDIATE\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/classes",
              "host": ["{{baseUrl}}"],
              "path": ["classes"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('classId', response.data.id);",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Schedules",
      "item": [
        {
          "name": "Get All Schedules",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/schedules",
              "host": ["{{baseUrl}}"],
              "path": ["schedules"]
            }
          }
        },
        {
          "name": "Get Staff Schedules",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{staffToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/schedules/my-schedules",
              "host": ["{{baseUrl}}"],
              "path": ["schedules", "my-schedules"]
            }
          }
        },
        {
          "name": "Create Schedule (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"classId\": \"{{classId}}\",\n  \"startTime\": \"2024-02-15T10:00:00Z\",\n  \"endTime\": \"2024-02-15T12:00:00Z\",\n  \"maxStudents\": 8\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/schedules",
              "host": ["{{baseUrl}}"],
              "path": ["schedules"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('scheduleId', response.data.id);",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Bookings",
      "item": [
        {
          "name": "Create Booking",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"scheduleId\": \"{{scheduleId}}\",\n  \"numberOfPeople\": 2,\n  \"notes\": \"Vegetarian options please\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('bookingId', response.data.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get My Bookings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/bookings/my-bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings", "my-bookings"]
            }
          }
        },
        {
          "name": "Get All Bookings (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            }
          }
        }
      ]
    },
    {
      "name": "Staff Applications",
      "item": [
        {
          "name": "Create Staff Application",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"Jane Chef\",\n  \"phone\": \"+1234567890\",\n  \"email\": \"jane@example.com\",\n  \"experience\": \"5 years of Thai cooking experience\",\n  \"skills\": [\"Pad Thai\", \"Tom Yum\", \"Green Curry\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/staff-applications",
              "host": ["{{baseUrl}}"],
              "path": ["staff-applications"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('applicationId', response.data.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Applications (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/staff-applications",
              "host": ["{{baseUrl}}"],
              "path": ["staff-applications"]
            }
          }
        },
        {
          "name": "Approve Application (Admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"APPROVED\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/staff-applications/{{applicationId}}",
              "host": ["{{baseUrl}}"],
              "path": ["staff-applications", "{{applicationId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Staff Management",
      "item": [
        {
          "name": "Get All Staff (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/staff",
              "host": ["{{baseUrl}}"],
              "path": ["staff"]
            }
          }
        },
        {
          "name": "Delete Staff (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/staff/{{staffId}}",
              "host": ["{{baseUrl}}"],
              "path": ["staff", "{{staffId}}"]
            }
          }
        }
      ]
    }
  ]
}